name: Build and Deploy to DigitalOcean

on:
  push:
    branches:
      - main

env: # Environment variables from GitHub Secrets
  NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL }}
  NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
  NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
  GH_CLIENT_ID: ${{ secrets.GH_CLIENT_ID }}
  GH_CLIENT_SECRET: ${{ secrets.GH_CLIENT_SECRET }}
  GH_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  SMTP_FROM: ${{ secrets.SMTP_FROM }}
  POSTMARK_API_TOKEN: ${{ secrets.POSTMARK_API_TOKEN }}
  POSTMARK_SIGN_IN_TEMPLATE: ${{ secrets.POSTMARK_SIGN_IN_TEMPLATE }}
  POSTMARK_ACTIVATION_TEMPLATE: ${{ secrets.POSTMARK_ACTIVATION_TEMPLATE }}
  STRIPE_API_KEY: ${{ secrets.STRIPE_API_KEY }}
  STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
  STRIPE_PRO_MONTHLY_PLAN_ID: ${{ secrets.STRIPE_PRO_MONTHLY_PLAN_ID }}
  PAYZE_API_KEY: ${{ secrets.PAYZE_API_KEY }}
  PAYZE_API_SECRET: ${{ secrets.PAYZE_API_SECRET }}
  MAINTENANCE_MODE: ${{ secrets.MAINTENANCE_MODE }}
  NEXT_PUBLIC_FACEBOOK_PIXEL_ID: ${{ secrets.NEXT_PUBLIC_FACEBOOK_PIXEL_ID }}
  DROPLET_SSH_KEY: ${{ secrets.DROPLET_SSH_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '18.17.1'

    - name: Install specific version of pnpm
      run: npm install -g pnpm@8.7.4

    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ~/.pnpm-store
        key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}

    - name: Install dependencies
      run: pnpm install

    - name: Build
      run: pnpm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: nextjs-build
        path: .next/

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v2
      with:
        name: nextjs-build
        path: .next/

    - name: Setup SSH Agent
      run: |
        eval $(ssh-agent -s)
        echo "${{ secrets.DROPLET_SSH_KEY }}" | ssh-add -

    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.DROPLET_SSH_KEY }}
        known_hosts: '104.248.248.135'

    - name: Adding Known Hosts
      run: ssh-keyscan -H 104.248.248.135 >> ~/.ssh/known_hosts
    

    - name: List added keys
      run: ssh-add -l


    - name: SCP .next folder to DigitalOcean
      run: scp -r .next/ nodejs@104.248.248.135:/home/nodejs/bitcamp.ge/.next

    - name: Deploy to DigitalOcean and set environment variables
      run: |
        ssh -o StrictHostKeyChecking=no nodejs@104.248.248.135 <<'ENDSSH'
          cd /home/nodejs/bitcamp.ge
          git pull origin main
          export NEXT_PUBLIC_APP_URL=$NEXT_PUBLIC_APP_URL
          export NEXTAUTH_URL=$NEXTAUTH_URL
          export NEXTAUTH_SECRET=$NEXTAUTH_SECRET
          export GH_CLIENT_ID=$GH_CLIENT_ID
          export GH_CLIENT_SECRET=$GH_CLIENT_SECRET
          export GH_ACCESS_TOKEN=$GH_ACCESS_TOKEN
          export DATABASE_URL=$DATABASE_URL
          export SMTP_FROM=$SMTP_FROM
          export POSTMARK_API_TOKEN=$POSTMARK_API_TOKEN
          export POSTMARK_SIGN_IN_TEMPLATE=$POSTMARK_SIGN_IN_TEMPLATE
          export POSTMARK_ACTIVATION_TEMPLATE=$POSTMARK_ACTIVATION_TEMPLATE
          export STRIPE_API_KEY=$STRIPE_API_KEY
          export STRIPE_WEBHOOK_SECRET=$STRIPE_WEBHOOK_SECRET
          export STRIPE_PRO_MONTHLY_PLAN_ID=$STRIPE_PRO_MONTHLY_PLAN_ID
          export PAYZE_API_KEY=$PAYZE_API_KEY
          export PAYZE_API_SECRET=$PAYZE_API_SECRET
          export MAINTENANCE_MODE=$MAINTENANCE_MODE
          export NEXT_PUBLIC_FACEBOOK_PIXEL_ID=$NEXT_PUBLIC_FACEBOOK_PIXEL_ID
          pnpm install
          pm2 restart all
        ENDSSH
